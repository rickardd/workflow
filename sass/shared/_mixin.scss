// Mixins
//
// Mixins can be used anywhere with @include
//
// Styleguide 15


// transition($property)
//
// Adds browser prefixes
//
// Compatible in IE6+, Firefox 2+, Safari 4+.
//
// $property - Any rule to prefix
//
// Styleguide 15.1
@mixin transition($property:all 200ms linear) {
  -webkit-transition: $property;
  -moz-transition: $property;
  -ms-transition: $property;
  -o-transition: $property;
  transition: $property;
}

// transform-transition($speed, $type)
//
// Adds browser prefixes to transform rules.
// e.g -webkit-transition: -webkit-transform $speed $type;
//
// Compatible in IE6+, Firefox 2+, Safari 4+.
//
// $speed - Default 200ms
// $type - Default ease-in-out
//
// Styleguide 15.2
@mixin transform-transition($speed:200ms,$type:ease-in-out) {
  -webkit-transition: -webkit-transform $speed $type;
  -moz-transition: -moz-transform $speed $type;
  -ms-transition: -ms-transform $speed $type;
  -o-transition: -o-transform $speed $type;
  transition: transform $speed $type;
}

// translate($translate)
//
// Adds browser prefixes
//
// Compatible in IE6+, Firefox 2+, Safari 4+.
//
// $translate - thg translate property
//
// Styleguide 15.3
@mixin translate($translate) {
  -webkit-transform: $translate;
     -moz-transform: $translate;
      -ms-transform: $translate;
       -o-transform: $translate;
          transform: $translate;

}


@mixin transform() {
  -webkit-transform:translateZ(0);
  -webkit-transform-style: preserve-3d;
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;

  -moz-transform:translateZ(0);
  -moz-transform-style: preserve-3d;
  -moz-transform: translate3d(0, 0, 0);
  -moz-backface-visibility: hidden;

  -ms-transform:translateZ(0);
  -ms-transform-style: preserve-3d;
  -ms-transform: translate3d(0, 0, 0);
  -ms-backface-visibility: hidden;

  -o-transform:translateZ(0);
  -o-transform-style: preserve-3d;
  -o-transform: translate3d(0, 0, 0);
  -o-backface-visibility: hidden;

  transform:translateZ(0);
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}


@mixin clearfix() {
  &:after {
    content: '';
    display:block;
    clear:both;
  }
}

@mixin touch-scroll() {
  -webkit-overflow-scrolling: touch;
}

@mixin verticalGradient($start,$end){
    background-color: $start;
    //@include filter-gradient($start, $end, vertical); // IE6-8
    // IE9 SVG, needs conditional override of 'filter' to 'none'
    //$experimental-support-for-svg: true;
    -webkit-background-image: linear-gradient(to bottom, $start 0%, $end 100%);
    -moz-background-image: linear-gradient(to bottom, $start 0%, $end 100%);
    -ms-background-image: linear-gradient(to bottom, $start 0%, $end 100%);
    -o-background-image: linear-gradient(to bottom, $start 0%, $end 100%);
    background-image: linear-gradient(to bottom, $start 0%, $end 100%);
    //@include background-image(linear-gradient(top, $start 0%,$end 100%)); // compass mixin
}

@mixin scale($size:0.3) {
  -webkit-transform:scale($size);
     -moz-transform:scale($size);
       -o-transform:scale($size);
      -ms-transform:scale($size);
          transform:scale($size);
}

@mixin noSelect() {
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  user-select: none;
}

@mixin noselect() {
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  user-select: none;
}


@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {color: $color;}
  &:-ms-input-placeholder {color: $color;}
  &::-moz-placeholder {color: $color;}
  &:-moz-placeholder {color: $color;}
}

@mixin noWrap() {
  // width must be defined on the element for this to work
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

// extend this class (reduce generated css)
noselect {
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  user-select: none;
}

wordbreak {
-ms-word-break: break-all;
     word-break: break-all;

     // Non standard for webkit
     word-break: break-word;

-webkit-hyphens: auto;
   -moz-hyphens: auto;
        hyphens: auto;
}

nowrap {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

imgscale {
  display: block;
  max-width: 100%;
  height: auto;
  width: auto\9;
}